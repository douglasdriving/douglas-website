---
import Layout from '../layouts/Layout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import { Fragment } from 'astro/components';

const projects = await getCollection('projects');
const sortedProjects = projects.sort((a, b) => (a.data.order || 999) - (b.data.order || 999));

// Render the markdown content
const renderedProjects = await Promise.all(
  sortedProjects.map(async (project: CollectionEntry<'projects'>) => {
    const { Content } = await project.render();
    return { ...project, Content };
  })
);
---

<Layout title="Projects - Douglas Driving">
	<div class="projects-content">
		{renderedProjects.map(({ data, Content }: { data: CollectionEntry<'projects'>['data']; Content: any }) => (
			<Fragment>
				<div class="project-item">
					<a href={data.link} target="_blank" class="project-link">
						<img src={import.meta.env.BASE_URL + data.banner} alt={data.title}>
					</a>
					<div class="project-description">
						<b>
							<a href={data.link} target="_blank">{data.title}</a>,
							{data.category}, {data.period}:
						</b>
						<Content />
					</div>
				</div>
			</Fragment>
		))}
	</div>
</Layout>

<style>
	.projects-content {
		text-align: left;
		max-width: 800px;
		margin: 0 auto;
		padding: 0 1rem;
	}

	.project-item {
		margin-bottom: 3rem;
	}

	.project-link {
		display: block;
		text-decoration: none;
	}

	.projects-content img {
		width: 100%;
		margin-top: 2em;
		border-radius: 10px;
		transition: transform 0.2s;
	}

	.projects-content img:hover {
		transform: scale(1.01);
	}

	.project-description {
		margin: 1em 0;
	}

	.project-description a {
		color: inherit;
		text-decoration: none;
	}

	.project-description a:hover {
		text-decoration: underline;
	}
</style>
